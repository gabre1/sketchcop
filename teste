<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerador de Frases Aleatórias</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
        body { font-family: 'Inter', sans-serif; }
        .gradient-bg {
            background: url('https://i.imgur.com/zUqFgmq.jpg') center/cover no-repeat;
            position: relative;
        }
        .gradient-bg::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.4);
            z-index: 1;
        }
        .phrase-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        .generate-btn {
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
            transition: all 0.3s ease;
        }
        .generate-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(238, 90, 36, 0.3);
        }
        .copy-btn {
            background: linear-gradient(135deg, #4ecdc4 0%, #44a08d 100%);
            transition: all 0.3s ease;
        }
        .copy-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 8px 20px rgba(78, 205, 196, 0.3);
        }
        .audio-btn {
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            transition: all 0.3s ease;
        }
        .audio-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 8px 20px rgba(37, 117, 252, 0.3);
        }
        .phrase-text {
            font-size: 1.25rem;
            line-height: 1.6;
            color: #2d3748;
        }
        .text-shadow-lg {
            text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.8);
        }
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body class="gradient-bg min-h-screen">
    <div class="relative z-10 min-h-screen">
        <!-- Botões no topo -->
        <div class="pt-8 pb-4">
            <div class="flex flex-col sm:flex-row gap-4 justify-center">
                <button id="generateBtn" class="generate-btn text-white font-semibold py-4 px-8 rounded-xl shadow-lg text-xl">
                    Gerar Frase
                </button>
                <button id="downloadBtn" class="copy-btn text-white font-semibold py-4 px-8 rounded-xl shadow-lg opacity-50 cursor-not-allowed text-xl" disabled>
                    Baixar Imagem
                </button>
                <button id="audioBtn" class="audio-btn text-white font-semibold py-4 px-8 rounded-xl shadow-lg opacity-50 cursor-not-allowed text-xl" disabled>
                    Reproduzir Áudio
                </button>
            </div>
        </div>
        
        <!-- Frase no rodapé -->
        <div class="absolute bottom-0 left-0 right-0 pb-8">
            <div class="text-center max-w-4xl mx-auto px-4">
                <div id="phraseDisplay" class="min-h-[200px] flex items-center justify-center text-shadow-lg max-w-md mx-auto" style="font-family: Tahoma, sans-serif; font-size: 35px; color: #ffe169; font-style: italic; word-wrap: break-word; hyphens: auto; line-height: 1.4;">
                    <span class="opacity-80">Clique para gerar uma frase!</span>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Mesmos arrays e funções do seu código (omitidos aqui para reduzir)
        // ...

        // Fala a frase em áudio
        function speakPhrase(text) {
            if (!('speechSynthesis' in window)) {
                alert("Seu navegador não suporta a síntese de voz.");
                return;
            }

            const utterance = new SpeechSynthesisUtterance(text);
            utterance.lang = "pt-BR";  // Português
            utterance.rate = 1;        // Velocidade normal
            utterance.pitch = 1;       // Tom normal

            window.speechSynthesis.cancel(); // cancela falas anteriores
            window.speechSynthesis.speak(utterance);
        }

        // Modificação no displayPhrase
        function displayPhrase(phrase) {
            const display = document.getElementById('phraseDisplay');
            display.innerHTML = `<span class="fade-in">${phrase}</span>`;
            
            // Habilita botões
            const downloadBtn = document.getElementById('downloadBtn');
            downloadBtn.disabled = false;
            downloadBtn.classList.remove('opacity-50', 'cursor-not-allowed');

            const audioBtn = document.getElementById('audioBtn');
            audioBtn.disabled = false;
            audioBtn.classList.remove('opacity-50', 'cursor-not-allowed');
        }

        // Eventos
        document.getElementById('generateBtn').addEventListener('click', () => {
            currentPhrase = generatePhrase();
            displayPhrase(currentPhrase);
        });

        document.getElementById('downloadBtn').addEventListener('click', downloadImage);

        document.getElementById('audioBtn').addEventListener('click', () => {
            if (currentPhrase) speakPhrase(currentPhrase);
        });

        // Atalho: espaço gera frase
        document.addEventListener('keydown', (e) => {
            if (e.key === ' ' && e.target.tagName !== 'INPUT') {
                e.preventDefault();
                document.getElementById('generateBtn').click();
            }
        });
    </script>
</body>
</html>
